using System.Runtime.Intrinsics;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;
using Engine;

// Source file usings
$usings~>using $usingName;<~~>\n<~

namespace $namespace
{
	public partial class $engineName
	{
		$pipelines~>public class $pipelineName
		{
			$pipelineSystems~>$systemName _|$systemName|;<~~>\n			<~

			public $pipelineName($uniqueArgs~>$argType $argName<~~>, <~)
			{
				$pipelineSystems~>_|$systemName| = new($systemArgs~>$argName<~~>, <~);<~~>\n				<~
			}

			public void Init()
			{
				$pipelineSystems|$hasInit == true|~>_|$systemName|.Init();<~~>\n				<~

			}

			public void Run(|$ecsName|.Main world)
			{
				$pipelineSystems|$hasPreRun == true|~>_|$systemName|.PreRun();<~~>\n				<~

				$pipelineContextArguments~>$argType arg$argType = new $argType();<~~>\n				<~

				$pipelineSystems~>world.Loop(_|$systemName|$systemContextArgs~>, ref $argName<~);<~~>\n				<~

				$pipelineSystems|$hasPostRun == true|~>_|$systemName|.PostRun();<~~>\n				<~

			}

			public void Dispose()
			{
				$pipelineSystems|$hasDispose == true|~>_|$systemName|.Dispose();<~~>\n				<~

			}
		}<~~>\n\n		<~
	}
}